version: "2"

services:
  # bootstrap:
  #  build: ./ethnode_ext/monitored-geth-client
  #  restart: on-failure
  #  container_name: bootstrap
  #  hostname: bootstrap
  #  links:
  #     - netstats
  #  entrypoint: /root/start.sh
  #  command: '--mine --minerthreads=4 --verbosity 4 --datadir=~/.ethereum/devchain --nodekeyhex=091bd6067cb4612df85d9c1ff85cc47f259ced4d4cd99816b14f35650f59c322 --rpcapi "db,personal,eth,net,web3" --rpccorsdomain="*" --networkid=44 --rpc --rpcaddr="0.0.0.0"'
  #  volumes:
  #    - ./ethnode_ext/files/password:/root/files/password:ro
  #    - ./ethnode_ext/files/genesis.json:/root/files/genesis.json:ro
  #    - ./ethnode_ext/files/keystore:/root/.ethereum/devchain/keystore:rw
  #  ports:
  #    - "30303:30303"
  #    - "30303:30303/udp"
  #    - "8545:8545"
  # second:
  # build: ./ethnode_ext/monitored-geth-client
  #  restart: on-failure
  #  container_name: second
  #  hostname: second
  #  links:
  #    - bootstrap
  #    - netstats
  #  entrypoint: /root/start.sh
  #  volumes:
  #      - ./ethnode_ext/files/password:/root/files/password:ro
  #      - ./ethnode_ext/files/genesis.json:/root/files/genesis.json:ro
  #      - ./ethnode_ext/files/keystore:/root/.ethereum/devchain/keystore:rw
  #  command: '--mine --minerthreads=4 --datadir=~/.ethereum/devchain --rpccorsdomain="*" --networkid=44 --rpc --bootnodes="enode://288b97262895b1c7ec61cf314c2e2004407d0a5dc77566877aad1f2a36659c8b698f4b56fd06c4a0c0bf007b4cfb3e7122d907da3b005fa90e724441902eb19e@XXX:30303"'
  #netstats:
  #  build: ./ethnode_ext/eth-netstats
  #  restart: on-failure
  #  container_name: netstats
  #  environment:
  #  - WS_SECRET=eth-net-stats-secret
  #  ports:
  #    - "3000:3000"
  #ethnode:
  #  build: ./ethnode
  #  restart: always
  #  container_name: ethnode
  # hostname: ethnode
  #  volumes:
  #    - ./ethnode/genesis.json:/eth/genesis.json
  #    - ./ethnode/start.sh:/eth/start.sh
  #    - ./ethnode/keystore:/eth/keystore:rw
  #  ports:
  #    - "8545:8545"
  pycontracts:
    build: ./pycontracts
    restart: always
    container_name: pycontracts
    hostname: pycontracts
    volumes:
     - ./pycontracts/deploy.js:/pyrrha/deploy.js
     - ./pycontracts/test.js:/pyrrha/test.js
     - ./pycontracts/totest:/pyrrha/totest
    environment:
     - ETH_NODE_BACK=http://bootstrap:8545
     - ETH_NODE=https://kovan.infura.io/cLGMAL2D7Evlhq4jf74C
  #pyrrha_pynode:
  #  build: ./pynode
  #  restart: always
  #  container_name: pyrrha_pynode
  #  ports:
  #    - "7545:7545"
  #    - "8545:8545"
  #    - "5001:5001"